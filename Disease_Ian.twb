<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.1110.1721                               -->
<workbook original-version='18.1' source-build='2019.2.6 (20192.19.1110.1721)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='disease_new' inline='true' name='federated.0tyztir08pu4vn1fewx911trwha2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='disease_new' name='stat-direct.01mqf6i0iw9cje1ai6f590fjddpm'>
            <connection class='stat-direct' directory='D:/Ian/Desktop/UTSA/Data Analytics Tools &amp; Techniques/Project' encoding-error-limit='' filename='disease_new.sas7bdat' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <relation connection='stat-direct.01mqf6i0iw9cje1ai6f590fjddpm' name='disease_final2.sas7bdat' table='[disease_final2.sas7bdat]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>Id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>source</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>region</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[admin1]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>admin1</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>localityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[localityName]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>localityName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>localityQuality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[localityQuality]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>localityQuality</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observationDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[observationDate]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>observationDate</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>Month</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>Year</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reportingDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[reportingDate]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>reportingDate</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>Season</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>disease</remote-name>
            <remote-type>129</remote-type>
            <local-name>[disease]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>disease</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serotypes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[serotypes]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>serotypes</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speciesDescription</remote-name>
            <remote-type>129</remote-type>
            <local-name>[speciesDescription]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>speciesDescription</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MainAnimal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MainAnimal]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>MainAnimal</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='comment'>&quot;Main Animal&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDomestic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsDomestic]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsDomestic</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsWild</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsWild]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsWild</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsCaptive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsCaptive]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsCaptive</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDomesticOrWild</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsDomesticOrWild]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsDomesticOrWild</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDomesticOrCaptive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsDomesticOrCaptive]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsDomesticOrCaptive</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsWildOrCaptive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsWildOrCaptive]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsWildOrCaptive</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsAllTypes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IsAllTypes]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>IsAllTypes</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumAtRisk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sumAtRisk]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>sumAtRisk</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumCases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sumCases]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>sumCases</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumDeaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sumDeaths]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>sumDeaths</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumDestroyed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sumDestroyed]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>sumDestroyed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sumSlaughtered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sumSlaughtered]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>sumSlaughtered</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humansGenderDesc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[humansGenderDesc]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>humansGenderDesc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humansAge</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humansAge]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>humansAge</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humansAffected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humansAffected]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>humansAffected</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humansDeaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humansDeaths]</local-name>
            <parent-name>[disease_final2.sas7bdat]</parent-name>
            <remote-alias>humansDeaths</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[%Died (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[Calculation_1212031308477083649]' peg='0' size='0.043' />
      </column>
      <column caption='CaseSizeCat' datatype='integer' name='[Calculation_1212031308474925056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (0&lt;=[sumCases] AND [sumCases]&lt;=100) THEN 1&#13;&#10;ELSEIF (101&lt;=[sumCases] AND [sumCases]&lt;=500) THEN 2&#13;&#10;ELSEIF (501&lt;=[sumCases] AND [sumCases]&lt;=1000) THEN 3&#13;&#10;ELSEIF (1001&lt;=[sumCases] AND [sumCases]&lt;=10000) THEN 4&#13;&#10;ELSEIF (10001&lt;=[sumCases] AND [sumCases]&lt;=46000) THEN 5&#13;&#10;END' />
        <aliases>
          <alias key='1' value='1 - 100' />
          <alias key='2' value='101 - 500' />
          <alias key='3' value='501 - 1,000' />
          <alias key='4' value='1,001-10,000' />
          <alias key='5' value='10,001 - 46,000' />
        </aliases>
      </column>
      <column caption='%Died' datatype='real' name='[Calculation_1212031308477083649]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(([sumDeaths]/[sumCases]),0)' />
      </column>
      <column caption='Season' datatype='string' name='[Calculation_1235956683905699840]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Season]' />
      </column>
      <column caption='%ofPopulationInfected' datatype='real' name='[Calculation_1774981258221289472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[sumCases]/[sumAtRisk]' />
      </column>
      <column caption='Hemishpere' datatype='string' name='[Calculation_775463617683955712]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [longitude] &gt; 0 THEN &apos;Northern&apos;&#13;&#10;ELSE &apos;Southern&apos;&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
      <column caption='Is All Types' datatype='real' name='[IsAllTypes]' role='measure' type='quantitative' />
      <column caption='Is Captive' datatype='real' name='[IsCaptive]' role='measure' type='quantitative' />
      <column caption='Is Domestic Or Captive' datatype='real' name='[IsDomesticOrCaptive]' role='measure' type='quantitative' />
      <column caption='Is Domestic Or Wild' datatype='real' name='[IsDomesticOrWild]' role='measure' type='quantitative' />
      <column caption='Is Domestic' datatype='real' name='[IsDomestic]' role='measure' type='quantitative' />
      <column caption='Is Wild Or Captive' datatype='real' name='[IsWildOrCaptive]' role='measure' type='quantitative' />
      <column caption='Is Wild' datatype='real' name='[IsWild]' role='measure' type='quantitative' />
      <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
      <column datatype='real' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Season1' datatype='string' name='[Season]' role='dimension' type='nominal' />
      <column caption='Admin1' datatype='string' name='[admin1]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
          <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
          <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
      <column caption='Humans Affected' datatype='real' name='[humansAffected]' role='measure' type='quantitative' />
      <column caption='Humans Age' datatype='real' name='[humansAge]' role='measure' type='quantitative' />
      <column caption='Humans Deaths' datatype='real' name='[humansDeaths]' role='measure' type='quantitative' />
      <column caption='Humans Gender Desc' datatype='string' name='[humansGenderDesc]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Locality Name' datatype='string' name='[localityName]' role='dimension' type='nominal' />
      <column caption='Locality Quality' datatype='string' name='[localityQuality]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Reporting Date' datatype='date' name='[reportingDate]' role='dimension' type='ordinal' />
      <column caption='Serotypes' datatype='string' name='[serotypes]' role='dimension' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Species Description' datatype='string' name='[speciesDescription]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Sum At Risk' datatype='real' name='[sumAtRisk]' role='measure' type='quantitative' />
      <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
      <column caption='Sum Deaths' datatype='real' name='[sumDeaths]' role='measure' type='quantitative' />
      <column caption='Sum Destroyed' datatype='real' name='[sumDestroyed]' role='measure' type='quantitative' />
      <column caption='Sum Slaughtered' datatype='real' name='[sumSlaughtered]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1212031308474925056]' derivation='None' name='[none:Calculation_1212031308474925056:ok]' pivot='key' type='ordinal' />
      <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
      <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1212031308474925056]' derivation='Sum' name='[sum:Calculation_1212031308474925056:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1212031308477083649]' derivation='Sum' name='[sum:Calculation_1212031308477083649:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Disease,Main Animal)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:disease:nk]' />
          <groupfilter function='level-members' level='[none:MainAnimal:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.531429' measure-ordering='alphabetic' measure-percentage='0.468571' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:Calculation_1212031308474925056:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>4</bucket>
            </map>
            <map to='asterisk'>
              <bucket>19</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>10</bucket>
            </map>
            <map to='diamond'>
              <bucket>5</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>7</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='plus'>
              <bucket>12</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='square'>
              <bucket>1</bucket>
            </map>
            <map to='square'>
              <bucket>11</bucket>
            </map>
            <map to='times'>
              <bucket>3</bucket>
            </map>
            <map to='times'>
              <bucket>15</bucket>
            </map>
            <map to='triangle'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Calculation_1212031308477083649:ok]' type='palette'>
            <map to='#499894'>
              <bucket>0.01015625</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.10000000000000001</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.33333333333333331</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.59999999999999998</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.9594339622641509</bucket>
            </map>
            <map to='#499894'>
              <bucket>5.5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.054545454545454543</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.22222222222222221</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.53508771929824561</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.81818181818181823</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2.083333333333333</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.071428571428571425</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.26666666666666666</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.5714285714285714</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.88888888888888884</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3.6666666666666665</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.012</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.125</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.375</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.66666666666666663</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.011428571428571429</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.11013292910447761</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.33461018476791349</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.61904761904761907</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.96296296296296291</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8.1166666666666671</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.0051329432296478798</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.080000000000000002</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.2857142857142857</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.58333333333333337</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.89473684210526316</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.042857142857142858</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.19047619047619047</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.77358490566037741</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1.8333333333333333</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.060400000000000002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.23333333333333334</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.55000000000000004</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.83333333333333326</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2.5</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.023333333333333334</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.040000000000000001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.15151515151515152</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.43478260869565216</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.72727272727272729</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1.25</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.0076666666666666662</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.08950241110698956</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.30303030303030304</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.5973985754103438</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.95238095238095233</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>4.75</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.014</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.13636363636363635</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.3774193548387097</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>0.69999999999999996</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1.0333333333333332</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.014919187733112309</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.035999999999999997</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.14285714285714285</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.40000000000000002</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.70744680851063835</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1.0631578947368421</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.033333333333333333</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.042105263157894736</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.16666666666666666</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.44444444444444442</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.75</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1.5</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.050000000000000003</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.20000000000000001</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.50884086444007859</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.80000000000000004</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.1111111111111111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.34375</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.625</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.98333333333333328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.0078947368421052634</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.090909090909090912</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.32051282051282054</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.5977011494252874</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.95833333333333337</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.064516129032258063</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.24317617866004962</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.5535714285714286</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.83333333333333337</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.021428571428571429</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.039603960396039604</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.14408793820558527</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.42857142857142855</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>0.7142857142857143</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1.1428571428571428</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.011454849498327761</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.11695906432748537</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.36734693877551022</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.62904080551139374</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>0.98461538461538467</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.0036383039271485488</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.066666666666666666</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.25</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.55555555555555558</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.8571428571428571</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3.2999999999999998</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_1212031308474925056:ok]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>4</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>1</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>5</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>3</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>2</bucket>
            </map>
            <map to='asterisk'>
              <bucket>19</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>10</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>7</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='plus'>
              <bucket>12</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='square'>
              <bucket>11</bucket>
            </map>
            <map to='times'>
              <bucket>15</bucket>
            </map>
            <map to='triangle'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:disease:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Classical swine fever&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;African horse sickness&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;African swine fever&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rabies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bovine spongiform encephalopathy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Lumpy skin disease&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glanders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Contagious bovine pleuropneumonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brucellosis (Brucella abortus)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peste des petits ruminants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rift Valley fever&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MERS-CoV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brucellosis (Brucella melitensis)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Influenza - Equine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newcastle disease&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porcine reproductive and respiratory syndrome&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Equine infectious anaemia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Influenza - Avian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brucellosis (Brucella suis)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anthrax&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bluetongue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheep pox and goat pox&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Foot and mouth disease&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Nile Fever&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:MainAnimal:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sheep&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unknown Bird&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duck&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Swine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicken&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Wild Boar&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:disease:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;Bluetongue&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;African swine fever&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;Foot and mouth disease&quot;</bucket>
            </map>
            <map to=':filled/down-triangle'>
              <bucket>&quot;Lumpy skin disease&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;Influenza - Avian&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Brucellosis (Brucella melitensis)&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;West Nile Fever&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Brucellosis (Brucella suis)&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Equine infectious anaemia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Rabies&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Anthrax&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Newcastle disease&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bovine spongiform encephalopathy&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sheep pox and goat pox&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Classical swine fever&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='% of Cases that Died'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='CaseSizeCat' datatype='integer' name='[Calculation_1212031308474925056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (0&lt;=[sumCases] AND [sumCases]&lt;=100) THEN 1&#13;&#10;ELSEIF (101&lt;=[sumCases] AND [sumCases]&lt;=500) THEN 2&#13;&#10;ELSEIF (501&lt;=[sumCases] AND [sumCases]&lt;=1000) THEN 3&#13;&#10;ELSEIF (1001&lt;=[sumCases] AND [sumCases]&lt;=10000) THEN 4&#13;&#10;ELSEIF (10001&lt;=[sumCases] AND [sumCases]&lt;=46000) THEN 5&#13;&#10;END' />
              <aliases>
                <alias key='1' value='1 - 100' />
                <alias key='2' value='101 - 500' />
                <alias key='3' value='501 - 1,000' />
                <alias key='4' value='1,001-10,000' />
                <alias key='5' value='10,001 - 46,000' />
              </aliases>
            </column>
            <column caption='%Died' datatype='real' name='[Calculation_1212031308477083649]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(([sumDeaths]/[sumCases]),0)' />
            </column>
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1212031308474925056]' derivation='None' name='[none:Calculation_1212031308474925056:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1212031308477083649]' derivation='None' name='[none:Calculation_1212031308477083649:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[sumCases]' derivation='Sum' name='[sum:sumCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sumDeaths]' derivation='Sum' name='[sum:sumDeaths:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
            <column caption='Sum Deaths' datatype='real' name='[sumDeaths]' role='measure' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='1' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='2' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='3' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='4' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova, Republic of&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;The former Yugoslav Republic of Macedonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;U.K. of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='5792514.777556059' min='-1336392.6348372884' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='8461715.9796728864' min='4249774.4320596298' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.001' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffffff</color>
                <color>#f8f8f8</color>
                <color>#f2f2f2</color>
                <color>#ececec</color>
                <color>#e5e5e5</color>
                <color>#dfdfdf</color>
                <color>#d9d9d9</color>
                <color>#dab5b5</color>
                <color>#db9292</color>
                <color>#dc6e6e</color>
                <color>#dd4949</color>
                <color>#de2525</color>
                <color>#e00000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='shape' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' value='Number of Cases'>
              <formatted-text>
                <run>Number of Cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' />
              <shape column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{3641FF6F-D3EF-4C2D-B6F8-8CE03A969E75}' />
    </worksheet>
    <worksheet name='% of Cases where Large Amount Died'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='CaseSizeCat' datatype='integer' name='[Calculation_1212031308474925056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (0&lt;=[sumCases] AND [sumCases]&lt;=100) THEN 1&#13;&#10;ELSEIF (101&lt;=[sumCases] AND [sumCases]&lt;=500) THEN 2&#13;&#10;ELSEIF (501&lt;=[sumCases] AND [sumCases]&lt;=1000) THEN 3&#13;&#10;ELSEIF (1001&lt;=[sumCases] AND [sumCases]&lt;=10000) THEN 4&#13;&#10;ELSEIF (10001&lt;=[sumCases] AND [sumCases]&lt;=46000) THEN 5&#13;&#10;END' />
              <aliases>
                <alias key='1' value='1 - 100' />
                <alias key='2' value='101 - 500' />
                <alias key='3' value='501 - 1,000' />
                <alias key='4' value='1,001-10,000' />
                <alias key='5' value='10,001 - 46,000' />
              </aliases>
            </column>
            <column caption='%Died' datatype='real' name='[Calculation_1212031308477083649]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(([sumDeaths]/[sumCases]),0)' />
            </column>
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1212031308474925056]' derivation='None' name='[none:Calculation_1212031308474925056:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1212031308477083649]' derivation='None' name='[none:Calculation_1212031308477083649:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[sumCases]' derivation='Sum' name='[sum:sumCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sumDeaths]' derivation='Sum' name='[sum:sumDeaths:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
            <column caption='Sum Deaths' datatype='real' name='[sumDeaths]' role='measure' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='1' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='2' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='3' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='4' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1212031308474925056:ok]' />
              <groupfilter function='member' level='[none:Calculation_1212031308474925056:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova, Republic of&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;The former Yugoslav Republic of Macedonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;U.K. of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='5792514.777556059' min='-1336392.6348372884' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='8461715.9796728864' min='4249774.4320596298' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.001' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffffff</color>
                <color>#f8f8f8</color>
                <color>#f2f2f2</color>
                <color>#ececec</color>
                <color>#e5e5e5</color>
                <color>#dfdfdf</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='shape' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' value='Number of Cases'>
              <formatted-text>
                <run>Number of Cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' />
              <shape column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <lod column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{72419CC4-8E55-4448-B9FE-6750942AE0DF}' />
    </worksheet>
    <worksheet name='Baltic States'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='4185623.6805062979' min='1666010.3824543389' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='8336632.3947533444' min='7116609.1270285593' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
              <geometry column='[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{850CA522-6626-4699-A687-FFDA8F03E254}' />
    </worksheet>
    <worksheet name='Countries in Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[Longitude (generated)]' field-type='quantitative' max='25709074.513858818' min='-23766253.901887484' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[Latitude (generated)]' field-type='quantitative' max='17806003.638998628' min='-11425290.762976509' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='816' />
            <format attr='cell-h' value='816' />
            <format attr='cell' value='102' />
            <format attr='cell-q' value='510' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' />
              <geometry column='[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[Latitude (generated)]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F570D55A-32B0-4CF6-AF33-379B5F33605E}' />
    </worksheet>
    <worksheet name='Diseases in Europe'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column-instance column='[Id]' derivation='Count' name='[cnt:Id:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</cols>
      </table>
      <simple-id uuid='{F6990D5E-B035-4131-8706-4B3FD41F5D0D}' />
    </worksheet>
    <worksheet name='France'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='1605209.7074914607' min='-689961.05550760764' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='6600153.2411786998' min='5244107.4214873044' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
              <shape column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{202D365B-E8E5-4C40-9C0F-B2A3E0DAF9DC}' />
    </worksheet>
    <worksheet name='Number of Animal Deaths by Top 4 Diseases (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[sumDeaths]' derivation='Sum' name='[sum:sumDeaths:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Deaths' datatype='real' name='[sumDeaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]' scope='rows' value='# of Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='130' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' value='0' />
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumDeaths:qk]</rows>
        <cols>([federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk] / [federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk])</cols>
      </table>
      <simple-id uuid='{A022ABA7-BA98-4224-A738-41FA4ED9B4EF}' />
    </worksheet>
    <worksheet name='Number of Animals Infected (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[sumCases]' derivation='Sum' name='[sum:sumCases:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' scope='rows' value='# of Cases' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</cols>
      </table>
      <simple-id uuid='{1E9DE26A-67F6-4103-965B-E56A109EEB32}' />
    </worksheet>
    <worksheet name='Number of Animals Infected by Top 4 Diseases (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[sumCases]' derivation='Sum' name='[sum:sumCases:qk]' pivot='key' type='quantitative' />
            <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' scope='rows' value='# Infected' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='126' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' value='0' />
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[sum:sumCases:qk]</rows>
        <cols>([federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk] / [federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk])</cols>
      </table>
      <simple-id uuid='{AEC4D4EB-CBF4-4240-A4DB-B5FA33D2EE64}' />
    </worksheet>
    <worksheet name='Number of Cases Per Country (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column-instance column='[Id]' derivation='Count' name='[cnt:Id:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' value='33' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{2D997093-7806-40BD-8E89-7D9D349E6B6F}' />
    </worksheet>
    <worksheet name='Number of Cases Per County2'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:disease:nk]' member='&quot;Influenza - Avian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DBB55DBF-5328-4197-9E5F-A1D8A19249AC}' />
    </worksheet>
    <worksheet name='Number of Cases Per Season (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Season' datatype='string' name='[Calculation_1235956683905699840]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Season]' />
            </column>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Season1' datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1235956683905699840]' derivation='None' name='[none:Calculation_1235956683905699840:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1235956683905699840:nk]'>
            <groupfilter from='&quot;Fall&quot;' function='range' level='[none:Calculation_1235956683905699840:nk]' to='&quot;Winter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1235956683905699840:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1235956683905699840:nk]' value='200' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1235956683905699840:nk]</cols>
      </table>
      <simple-id uuid='{48B1A6C8-4758-4707-A1CF-000CFD0814F6}' />
    </worksheet>
    <worksheet name='Number of Observations per Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]' value='330' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]' />
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</cols>
      </table>
      <simple-id uuid='{D7EDAF02-DBE9-416D-A277-85E99F67401B}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column aggregation='None' datatype='integer' name='[%Died (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-2' formula='[Calculation_1212031308477083649]' peg='0' size='0.043' />
            </column>
            <column caption='%Died' datatype='real' name='[Calculation_1212031308477083649]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(([sumDeaths]/[sumCases]),0)' />
            </column>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1212031308477083649]' derivation='Count' name='[cnt:Calculation_1212031308477083649:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='Count' name='[cnt:Id:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[%Died (bin)]' derivation='None' name='[none:%Died (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Sum Cases' datatype='real' name='[sumCases]' role='measure' type='quantitative' />
            <column caption='Sum Deaths' datatype='real' name='[sumDeaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:%Died (bin):qk]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Calculation_1212031308477083649:qk]</rows>
        <cols>([federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk] * [federated.0tyztir08pu4vn1fewx911trwha2].[none:%Died (bin):qk])</cols>
        <show-full-range>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[%Died (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{C3044682-1784-4E4C-AE33-E4D001046213}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{6CD1687F-8022-4855-BE13-686614074188}' />
    </worksheet>
    <worksheet name='Top 4 Diseases Through Time (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
              <geometry column='[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F9E9812B-D565-497D-A74B-0576026A2814}' />
    </worksheet>
    <worksheet name='Top 4: Number of Incidents (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='128' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' value='0' />
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[ctd:Id:qk]</rows>
        <cols>([federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk] / [federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk])</cols>
      </table>
      <simple-id uuid='{A019003E-B456-4A58-9314-AD3874EBE59C}' />
    </worksheet>
    <worksheet name='Top Animals Through Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='6936508.7824034328' min='-1261970.5679357366' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='9137367.1335628722' min='4293495.0217002435' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{E592382F-704F-4582-8AA9-B8339CC22D08}' />
    </worksheet>
    <worksheet name='Top Animals/Diseases Through Time (Europe)'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column caption='Main Animal' datatype='string' name='[MainAnimal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[observationDate]' derivation='Month' name='[mn:observationDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[MainAnimal]' derivation='None' name='[none:MainAnimal:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Observation Date' datatype='date' name='[observationDate]' role='dimension' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[observationDate]' derivation='Year' name='[yr:observationDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova, Republic of&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;The former Yugoslav Republic of Macedonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;U.K. of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]' field-type='quantitative' max='5792514.777556059' min='-1336392.6348372884' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]' field-type='quantitative' max='8461715.9796728864' min='4249774.4320596298' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' />
              <shape column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</rows>
        <cols>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</cols>
        <pages>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</column>
          <column>[federated.0tyztir08pu4vn1fewx911trwha2].[mn:observationDate:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{E8BACB44-FCCC-42AD-9AF2-EDB5A634B666}' />
    </worksheet>
    <worksheet name='Where Diseases Are'>
      <table>
        <view>
          <datasources>
            <datasource caption='disease_new' name='federated.0tyztir08pu4vn1fewx911trwha2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tyztir08pu4vn1fewx911trwha2'>
            <column datatype='real' name='[Id]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Id]' derivation='Count' name='[cnt:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;CÃ´te d&apos;Ivoire&quot;' value='&quot;Côte-d&apos;&apos;Ivoire&quot;' />
                <semantic-value key='&quot;Taiwan (Province of China)&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;U.K. of Great Britain and Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova, Republic of&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;The former Yugoslav Republic of Macedonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;U.K. of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]'>
            <groupfilter count='4' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Number of Records:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</column>
            <column>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' scope='rows' value='# of Observations' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' value='33' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tyztir08pu4vn1fewx911trwha2].[cnt:Id:qk]</rows>
        <cols>([federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk] / [federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk])</cols>
      </table>
      <simple-id uuid='{67881FBF-7DAC-44C5-B917-CCBD12E828FC}' />
    </worksheet>
  </worksheets>
  <windows source-height='44'>
    <window class='worksheet' name='Countries in Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{02FC3A55-EAA8-4CDC-AC3C-25C4BD3BAA5C}' />
    </window>
    <window class='worksheet' name='Number of Observations per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01D4155D-FF66-4F6C-9A6E-CE4970DEF8ED}' />
    </window>
    <window class='worksheet' name='Number of Cases Per Country (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C41FD7A4-7723-43AE-A127-0EA011B12FEC}' />
    </window>
    <window class='worksheet' name='Number of Cases Per County2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='284'>
            <card param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98937045-BD30-425D-8BAE-0CD6E77B5E52}' />
    </window>
    <window class='worksheet' name='Number of Cases Per Season (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1235956683905699840:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_775463617683955712:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Season:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3627F411-5684-4ED1-A283-B9A225112C3C}' />
    </window>
    <window class='worksheet' name='Top 4 Diseases Through Time (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='191'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Year:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E804ECD1-E19E-4A2A-B23F-8E55B4DD640F}' />
    </window>
    <window class='worksheet' maximized='true' name='Top Animals/Diseases Through Time (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F06DBF55-E9D1-4B6C-B2E0-DCED472FC201}' />
    </window>
    <window class='worksheet' name='France'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
            <bucket>4</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:status:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DE06255B-B2CD-444E-80C9-3DFD14671816}' />
    </window>
    <window class='worksheet' name='Baltic States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
            <bucket>3</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.332889000000002</value>
                <value>22.942139000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.332555999999997</value>
                <value>22.892111</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.083500000000001</value>
                <value>22.868611000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.158743999999999</value>
                <value>22.858257999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.259278000000002</value>
                <value>22.856750000000002</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.406360999999997</value>
                <value>22.796222</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.498167000000002</value>
                <value>22.771305999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.494110999999997</value>
                <value>22.770667</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.334277999999998</value>
                <value>22.739443999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.384999999999998</value>
                <value>22.719332999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.026944</value>
                <value>22.688333</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.299694000000002</value>
                <value>22.658389</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.470360999999997</value>
                <value>22.649305999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.374721999999998</value>
                <value>22.641943999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.297778000000001</value>
                <value>22.638556000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.228639000000001</value>
                <value>22.636638999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.381777999999997</value>
                <value>22.618888999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.297806000000001</value>
                <value>22.618389000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.421388999999998</value>
                <value>22.614861000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.644444</value>
                <value>22.605556</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.557305999999997</value>
                <value>22.534943999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.484900000000003</value>
                <value>22.495200000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.282499999999999</value>
                <value>22.436667</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.313333</value>
                <value>22.398333000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.914166999999999</value>
                <value>22.355833000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.024921999999997</value>
                <value>22.166053000000002</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.644806000000003</value>
                <value>21.105305999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.699167000000003</value>
                <value>21.093889000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>54.706499999999998</value>
                <value>20.5367</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.728473000000001</value>
                <value>20.219398000000002</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.1111</value>
                <value>19.058800000000002</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>54.342739999999999</value>
                <value>18.828906</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>54.342739999999999</value>
                <value>18.828904000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.012777999999997</value>
                <value>18.629722000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>54.515599999999999</value>
                <value>18.550799999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53.044586000000002</value>
                <value>18.491775000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.681764000000001</value>
                <value>18.347308000000002</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.733452999999997</value>
                <value>18.343959999999999</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:latitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:longitude:qk]</field>
                  <field>[federated.0tyztir08pu4vn1fewx911trwha2].[Geometry (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52.680047000000002</value>
                <value>18.325174000000001</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9903613A-3FD5-4DE5-B0EF-810C0AE6B4BD}' />
    </window>
    <window class='worksheet' name='Top 4: Number of Incidents (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{014BEEC7-447D-4671-A4F3-BF9961A92B25}' />
    </window>
    <window class='worksheet' name='Number of Animals Infected (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64D77CE9-2B5D-4AB6-ACE6-24F61E12B509}' />
    </window>
    <window class='worksheet' name='Number of Animals Infected by Top 4 Diseases (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE69BB31-A4F2-4DCC-8631-4381599AE306}' />
    </window>
    <window class='worksheet' name='Number of Animal Deaths by Top 4 Diseases (Europe)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E92A3C0-E728-4149-B62B-906760D17460}' />
    </window>
    <window class='worksheet' name='Top Animals Through Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{61C36C98-2ABE-4076-B0CE-DDC6053D9C39}' />
    </window>
    <window class='worksheet' name='% of Cases that Died'>
      <cards>
        <edge name='left'>
          <strip size='152'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='68'>
            <card type='columns' />
          </strip>
          <strip size='70'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' type='shape' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2840F327-ED6A-457C-BE06-8EE028F2A668}' />
    </window>
    <window class='worksheet' name='% of Cases where Large Amount Died'>
      <cards>
        <edge name='left'>
          <strip size='152'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='68'>
            <card type='columns' />
          </strip>
          <strip size='70'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]' type='shape' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
            <bucket>12</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308474925056:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Calculation_1212031308477083649:qk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:MainAnimal:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{85C80EEB-7244-46A0-B647-84F732F75F32}' />
    </window>
    <window class='worksheet' name='Where Diseases Are'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10D46B0E-9D1E-4152-9D6F-A98A2B2DDD40}' />
    </window>
    <window class='worksheet' name='Diseases in Europe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3E0E871-9F6C-4EBE-9783-B37B6F5DCDAC}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:Id:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA53C244-0F86-4A1E-9999-654DEC872C3E}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
            <bucket>8</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:country:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:disease:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[none:region:nk]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[qr:observationDate:ok]</field>
            <field>[federated.0tyztir08pu4vn1fewx911trwha2].[yr:observationDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF31CCA1-1651-4E27-91A9-7683157085A7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% of Cases that Died' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='% of Cases where Large Amount Died' width='192'>
      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
      VUYawh+iEPx/UIuD+gmdvmMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Baltic States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countries in Data' width='192'>
      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
      D8TqmQIlnvK8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Diseases in Europe' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='France' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Animal Deaths by Top 4 Diseases (Europe)' width='192'>
      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
      cHSonCwtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of Animals Infected (Europe)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Animals Infected by Top 4 Diseases (Europe)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Cases Per Country (Europe)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d5Ak153n98nK8q7LtPfed483GAxAYGCIIeENieMud1dUBHdPitvYO90/
      CkVIf0irkBSnuwid24vbW0q7eyRIAoTHEIQ3HIPx0z3tvanq6i7f5asyU3/0YDAzndUYAjPd
      A3R+Ijqiq/JXmS/NN997v/d7vycoiqKgobFN0W11ATQ0thJNABrbGk0AGtuGeNDH66++wsTC
      ytXvNAFobA/kDH/zH/8LNU2t6OQCU5dP87P/779qAtDYJsR9GBt2sbu/l+Z6N7957WOOHOrR
      BKCxTXBUkJq+yPT8Ir5ACFAoFAoImhtUY7uwPD/Ob9/7lF2HH8aRD/Dx2bHNF4CiKCiKgk6n
      VT4aW8+WPIVapaNxp6C9hjW2NZoANLY1mgA0tjWaADS2NZoANLY1Wy4AKZ8lmcqs/V/II8ma
      h0hj89Bv6dEVmTdffZl8Xqb33qPoYxMopd20ltu2tFga24etrQEUGdFeytM/fI6Bj95gJZ5C
      kre0RBrbjK0VgE5PV0sdWVnkyaefwLewgsdm2NIiaWwvtrgJpBDyzzEwuYiTOAXRjNOqCUBj
      89jiJlCBQFbk3jYny8ZG+ptKmA9ntrRIGtuLrRWAIFJqs+Kq7+bI3g5W41m8DtOWFklje7El
      0aCyLCOKIgCrYT/HT50lnRfYvf8u6is9m1kcjW3O1tYAssRv3/2E/Xd/B70BRs5+RDBV2NIi
      aWwvtrYTLIBZr2N+ahRJ76S+VCRX0PygGpvHV24CxUJLzC4uY7a7aakrZWhoFJPTS1tjDZOj
      QyQLBvp62gnMT7EUWqW9uw+bSVzXBMqlV5mZX6axpYlsMoHN4UQn3NJz1NAoylduAulNdnp7
      e4kFF5kcHqaqrYdcOEBwZZ6swUuTW2FkNsBCKEV/bzvDQ8Oq+zFaHLS3t2AUdSzNDHPy4shX
      PhkNjT+Ur9wEslhMDF08i6uigdTKIk6rgbRJx3JkFau7CadTR+ziChaHCZ3egiJlkWX56p9a
      xWOwWKl21VIoaP0Ajc3hKwtgdPAi5c09lJdYWcwGWQquEkzmaemoZmoxgC8Wp6qpkcDsFOnV
      IHpzCTqdDkEQEARhrQmkyPziZ/8JweoGwL+0wPee/6fo9VvbNdHYPnzlJ83pcrE0O8Gy0Up3
      ezczk+NUtXTgLCmhOjFLQiqnuawEr6GWaV+Uvu7W9TsRBPYduIvKtn7sRh0zYxdAr3UANDaP
      LR8H0NDYSrasrfG//f3HLAZXVbft76zmv/nerk0ukcZ2ZMsEsBxJ4isigPCqFg+ksTls+Yww
      DY2tRBOAxrZGE4DGtkYTgMa2RhOAxrZGE4DGtkYTgMa2RhOAxrZGE4DGtkYTgMa2RhOAxrZG
      E4DGtkYTgMa2RhOAxrZGE4DGtkYTgMa2RhOAxrZGE4DGtkYTgMa2RhOAxrbmywWgKMibmzlF
      Q2PT2FAA77/2IufO/p6//l//dy5OL1+/UVFIrsaRZJClPIvz88z7AiiKQiIWJhiJoyiQSyfx
      B1bQJKRxJ7KhAGbmZnj72Dvs2dXO2Nz1Aois+Dl37jTJPCRD86wkwWY1k0+GuTy+wMr0EEux
      FOcvDiJno1wem7utJ6Kh8VXYMC/Q8z/+U0ZmQ1SVGDGX1ly3zV1eTX00CEChALlkmNm5VWpd
      AmX1LTQ5Vjk1OI3Z6aa6rhXfuXPIcu2GyXE/R1FkLUGuxqawoQA+eedNRgNpTHodBx94DHdr
      taqds6KB/dUiE+fPkBTc5DMZcmIKs9OBnE2CUkBAvC45riAUzwEqCDotQa7GprDhU5bNFjj6
      7I9ocFsQxetNV3yzLCyFWEmPUF9hxxcIIYtWdlTXM3TpEheXRXbt3sH8+GXOnrtAU0f/bT0R
      DY2vwoYCqKqr5Z0X/wFBb+Twg4/R11J1dVtZdQNl1Q1XP5dX1l79v2/Xnqv/N3f00nwrS6yh
      cQvZUABGJPKCESkew2S1bFaZNDQ2jQ29QGcuDPH0P/kxD+9r4tLYwmaVSUNj09hQAM/84Fne
      +PnfcnymwCMHOzerTBoam4a6ABSZ9z74kNGRYUSDCXJxJueXVU01NL7JFOkDCNx7z2Fmpib4
      07sfJhdbJqrYNrdkGhqbgLoABIHFySH+/X/8z9xz38NE5wYp3/c0dWUlm1w8DY3bS1EvkNNT
      xp49e2htacbS10tzY+MmFktDY3Mo2gn2lFVx5K5dfPz+uxx741UuTfo2s1waGpvChuMAr7/x
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Cases Per County2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXBk213fP/fe3je1Wq19X0b7SJrtrX4PbL+HjYEETMqGKhMqDsGVhSKk
      QgqCyxQpTAJ/QACHlINNVYyNUwQTGy/YgPHy3vNb5o2k0WhGGu372lKr1XvfLX/ozczTzPRt
      zbxRj2b6fP5Sn3uu7u8u33vO+Z3f+V3JNE0TgaBEkR+2AQLBw0QIQFDSCAEI3hFaLsXYyDBr
      23tHqm8aOssrK8ds1dGxPWwDBI8upp7l03/4+4Tb+6nV7FT6Fd64OErnwDnk1BZKsJH4xizB
      yjqi24ts7Mu0h2T+4I//jJ/5yEepDjiQjRzRlE5z+ynU6CpyWR0hr6No5yBaAMF9k45tIIdO
      8eEP/iTPn+/n83/6J+wkknz6f36aK2/8I4tRjR98+6usb27y/TeG+dZffI4tTUaRZew2hX/4
      8uf5xveGUXfn+dYrV/i7v/0WklzcR1IIQHDf2Bwe9qNbZFSdbC7Hnqrw4nvfQ8hjkNVMdE0j
      l1MB+OEXfpi+tkpcwTpq6xsY7GlH9lbyzz/yYYaeep710b8j6QgTdBe3UyK6QIL7xuEN88L5
      Vn7vd36b/mffz/veNcTvfvJ36H3qBXqbFT792f+O3yPjcjqx2+yUV1bjcjqpc2t89i//ltrq
      ahQJFLuPpqANf/9ZpCKfg1SseYAbh5GkYp+i4KST2Fnj/33ju/zkhz6M36kU9dhFE4Cu68iy
      LAQgOFGIMYCgpBECEJQ0QgCCkkYIQFDSCAEIShoxDyA4NlRN57c/99Khsp95bx89zZUPyaI7
      EQIQHBuGaTI6s3Go7Eef7HhI1twd0QUSlDRCAIKSRghAUNIIAQhKGiEAQUkjBCAoae7fDWpq
      jF4aBpuDhrZO5OQ2s6vbVNe30lDhZvTKNSSnj6H+7qLHeAsER+W+WwA9lyEnO+nq7qHC72Zq
      cYML586yuTTL9PUJmrsHqHZkWI5mH6S9AsED5b5bAMnmJOx3Mzt5GVuwGUmWQJKxA3FNp8lh
      w+n3shBPoQds6LqOYRgP0HTBSUfT7rzfuq6jqupDsObu3LcADDVLsLqBWtPH1cUkkqGTzWXJ
      SjK1Xifbewly21Gq2lpQlINVPmJBTGlhoN1RpigKdrv9IVhzd+5bALLdwd7SHGu6zOneDox0
      OZMT1+ns6SPotTMzNYkSbKTSd3JOViC4nfsXgOKgrbP7VoG/nMHB8ps/T3X3vyPDBIJiINyg
      gpJGCEBQ0ggBCEoaIQBBSSMEIChphAAEJY0QgKCkEQIQlDRCAIKSRghAUNIIAQhKGiEAQUkj
      BCAoaYQABCWNEICgpBECEJQ0QgCCkkYIQFDSvKP06HouwZe/+i1e/MA/YXNunL20ht0TorPG
      zfDkMqZh8OQzT+MQMhOcUO5bAKZpMj05TWNzE6YJu0mVJy9c4NLFi0wvyZw5f57c5nUWNuOc
      qvFhmiZF+iKr4IRwt9ttcrKeg/sWQHJ3hUhaxqYliSdSB+lOJAkJCQOQAEVW0A0DwzAwTVPk
      BSoxDEO/S5mJrt9Z/rDIKwBD1zEOKVXCZrv1FW+7O0hLvcTc9BaqpuGWDaZnptEdHjqq3Fyb
      vI6eiNJ/4RSKctAHEnmBSgv9Li96RZax2U7Oh4nyWjL66j/wD999iR3VQ3Oll82Mm9/6j794
      c7vT46fB46e6qgrFZkeqOUcslqC1NYBNkejx7yPZ2/HYxQBAcHLJK4Cz73ofXjnLK9thfu7F
      bv7L7//ZXevZHY6b/ypYHrxZ7vWXPVBDBYLjwPL13HnhRQL71/jU//pzfvwnf7pYNgkERSNv
      C7C/tci3vvcGuMpoqC8jsr0JtBbRNIHg+MkrAJc/xNmzZ29VdPmKYpBAUEzyCsDh9tPe7i+m
      LQJB0ckrgC9+5o+we7zYmt/FBy60IkkydvvJcV8JBA+CvE/0e154L3/yP/6E3ctLzL1eRqC+
      k1/48I8X0zaB4NjJ6wWqbunj137jE1zoasDj8XJ2aLCYdgkERcHSDbp07XX0cD8//7Mf5Ct/
      /ZfFskkgKBqWnfra1m7mv/lFPjv/Co1t4oMXgscPSwEEak/xm5/4z6iagcPpsKoqEDySWHaB
      sukkGQ2cTjv7sf1i2SQQFI28LYCaSfLdv/lzVl39vKe/ij/94lf45Mf/UzFtE9yFy7ObXF+K
      HCr7sadP4XWJFvp+yCuAVGyLibk1YnaTHyTL+el/9uFi2iXIw/DUOl9+afJQ2Q+faRECuE/y
      CqCsupV//Uu/wiuvD2OYkE6ILpDg8cNyDDA3+n2urqapq6ujOlxuVVUgeCSxFEAwXMXq7FWu
      Xr3K1PxKsWwSCIqGpRvUHWrghefOH/zt9xbFIIGgmFi2ABIyiqKAnuLvv/PKoW2mabC5usTc
      4gq6YWKoGeZm58ioOmCyubrIdjR+nLYLBO8YSwEYpoGqqug6JJKHB8GGnsVUPJTZ0lyeXGb4
      zUuUlQcYGbnM5vwkOzk7q1OX2cuITBCCk4tlF8jl8dPYUI+qm3z8+R85tE2xuTFza1ybX+XU
      wAUWkxtUhMK4zHlWYgl6+7rQXAmWtvfx1/nRdV2kRXkAmHe5hrqmoarqQ7DGGk27i626fqJs
      tRSAkUvwta9+Da/HScXyHh/+wLtubjNNk5rGNjxeJzNLq0gmYJroErhlBVU3yGVyuLyOg24U
      Ii3Kg0CS72y0FZsNu93+EKyxxkC7o0xRlBNlq3U06MQl6oZe5GO/+FGujbx6aFsuEWV4eIS5
      xQ3CVWFqK/xcvPQm/nAdHa3NXLs8zGxEpbnSc6wnIBC8EyxbgI6zz/P9z36OPxz/Du9+/08c
      2ub0hzh3LvS2khCNb/v11JMVD9BMgeB4sGwBFq++Qaj33fzyv/sYb7z07WLZJBAUDcsWoK69
      n//zx5/lD4edtPQ/XyybBIKiYSkAT6iBj//mJ9ANE+Uugy+B4FHH8qlO7G2zs59BBpZXV4tk
      kkBQPPIKIBPf5W//6n/zhb/5NiNvvsanPvuFYtolEBSFvF0gLZchpUqYxNmOOvjYL3y0mHYJ
      BEUhbwvgq6jjfS++m8Ez53nxPe9i+PVX81UVCB5ZLMcA6ViE0SvXWFte4MrUQpFMEgiKh6UA
      Wobezdk6me/84DL/4uc/UiybBIKiYR0KMf4y33h5jGQixiuvvVksmwSComEdDepy0TX4NB98
      4Ryy7eQEMAkEDwrrBTGuIEpyha985Sv83UsXi2WTQFA08rYAs1MTOJ0OKisrAXAHA0UzSiAo
      FnkF4PX5cLrctHd0IEsSskOENQseP/J2gWrqGlkd/z7TewptzfX83y/9VTHtEgiKQt4WILJ4
      lc/91TeJ297kyrf99D31YjHtEgiKQl4BhJv7+PVf+1VmdmVym9dxhoP5qgoEjyyWXqDV6TFm
      Zq7x7eElvv61r9y21SS5v8faxtZBWhQtx/raOjnNAEyikU324qnjs1wgeABYzgM0dZ/hq5/+
      c97/Ux9i6trUoW1aLsnK+g5+t87YtSSkNqisb2B49AodVW5WUzbU6DSdZ58h4BRrCQQng3RW
      5Zf/6Js3f+cVwMjFH+DxuKmoqWX01Zfw1bQd2m5z+Ojq9HD98psEqjqIpLdpqG9ke2WDpd0c
      Pb3nUCMaK9v7dNWKtCgPCpEW5Z2hqhqb0eTN33kF0Nk7gMPhpLG1E0lWbqY2uYFpaFx6/VVq
      OwapC/vZWZXANDEkcMgy2ltJtRwuG/Jbq8lksarsHZMvLYrNdvI+YWug31GmKMpDtdV2m0l5
      LXE77Xzp859hPWmSTSZ48YMfYaij7ub2bHyL7ZiKbXUOzGaqAi4uXnoTT3kV7VVuhkcuAQoX
      nvDx9lRAIi/Q8fAoXdeTZGteAWxOv8m63MQv/ZsfQ01s8clP/QVDv/7vb253ldXxo++/JQiq
      yml52/7PPFV1DOYKBA+WvAJIJ2LMT4/zhS9EwdDYiolEt4LHj7wCaB56L5/oePrm75/4KREN
      Knj8yCsAxe6kvNxZTFsEAr47uoCq3hqplgfcnO+qs9jjnXHyXAeCkuazXx9hP5m9+bu/tepY
      BSD8koKSRghAUNIIAQhKGiEAQUkjBCAoaYQABCWNEICgpBECEJQ0QgCCkkYIQFDSCAEIShoh
      AEFJIwQgKGmEAAQlzX0LwDRNottrzC1tAJCIbjEyOspWNIGh5ZgYv8zk7BLmAzNVIHjw3L8A
      DJ2MliMW2QPg6uQs/f29zE1NsDB9jbK6DpzpTTb2T166DoHgBve9IEZWbNTW1rC9uXhQoCjY
      bQ5cmOxmcvT53egVQRb24lR5y0ReoAdEqeUFMk3zgZ6bpmmHfj+wFWGSaaIbGjlJIuS0E0/n
      yO7FKa9rvplTSJblE5US41EkX14gu/3krdk20O4oUxTlnmyVJOmBnpt61LxAhdC1NBPjE8QT
      GRZWt+hqa2R0dIzGtk6qg07GxyeQ3UH6yhzv1GaB4Ni4bwEoNjf9Q2cPlZ2rvLV2c2DozP1b
      JRAUCeEGFZQ0QgCCkkYIQFDSCAEIShohAEFJIwQgKGmEAAQljRCAoKQRyXEfczTdYGM3cajM
      53YQ9LkekkUnCyGAx5y9RIZ/+wffOFT2T9/VxUc/IGbqQXSBBCWOaAEEjwRf+t4Es2u7N3/b
      FZlf+dDTFnscDSGA++DLL00yMr1xqOw3fu45HHYlzx6PFvFUlpx2K25YQiIUcD9Ei2BicZuL
      k2s3fzvsCr/yAP7viRBAMp3j669NHyrrbgoz0F79kCyyZmkrxujMYQEY5uOz+PNTf32R166t
      3PytyBJ//dsffogWHR/HIoBMbIvhiXlA5sITF7AXGGkkMjm+8PdXDpV98PnuEyuAx4Wp5R00
      /daqLY/LTktN8CFaVHyORQBzC0ucPnOO3MZ1FreTdFR7j+Mwgrexu58+1EcGaK8LWe7zXz//
      Mrvx9M3fPc1h/tvHXjgW+04qxyIA3TSxSTLY7eSOaa3qlblNIrFbN0+WJH5oqPme/49pmqRz
      t60TlWUcdoXPfG2YSCx1s7wy6OFf/tjZ2//FiWByKcLv/sUrh8p+9Wefobsp/JAsejQ4FgHU
      VgSZnl9Ci0boONtxHIfgKy9fPzwosin3JYBMTuNnf+tLh8peON/GL33wCUZnNlje2r9Z3lRd
      dl+2xpIZXrq8dKisuylMR4P1G/pRYX49yp99feRQ2U8828Vgx/F3YadXdri+tHOo7PnBZgLe
      o33i91gEEG7sQN7eRKodJOB4Z1MNS5sxdOPWANPlsFFb4XunJhaVnViaP/3a8KGyn/uRgUdO
      ABOL21ye2TxU9iNPtJNI5xib2zpU/kx/Y1FsGpneuGP82N9WRSqr8t2RhUPlF3rqqA35D5Ud
      kxdIIlRZc0dpLJll5W1vVCj8Vv34Z/6R2KHvxlbyyX/13rz1t/eSbO4mD5V1NITY2U/xzddn
      DpU/e7qJ5vt8q9+N740u8oW/HztU9h8+9LSle/Tq/BZvdyD5vU6aq8uYW4uSytzqPtps8kPv
      zlxbiPDFb48fKrvQfe/f8M2pOlPLh9/a4aCHmtCDe7Ft7CTusDUUcN8hAMk0j99/dyMnkG6Y
      ZG/LS+G0K0gSZHKHy+02GZsskcnph7LLKbKEwyaT04xDLQOA26GgGxzyYQO4HAqYkLnLsWUJ
      0rcd26bI2BWJrGoccm/KkoTTLqPq5iHvyY1jGyZ3nJ/LrsBdzs9hU1DkO4+d7/ykt85DM0zU
      2/LtuBwK5l2OXfDaqvoh8d04tqoZaMd0bU/a/S6KAKy4cfi75QsyTfOBlRfjGA/z2Hc7xkm8
      tifNpocugLdjaCrJdAYAl9uD3VZgZtU0MUzz5knJd0kalQ81l0W2OVBk60RdpqGztbmJjkJV
      dRW2AvUBctkM2ZyKJMl4vF4K7WIaOslUCtMEh9ON01G4Z5pNp8hpOpKs4PV4KJRvLJvN4nA6
      MTUVXVKwK9bXStc0ZMV28LbOZHC5Hnz0qGma5HI5bHY7yhHunWmaZNIpNN1AsdnxuK1tMt96
      NmRZRs9l0CQHztsmpU7ETPABBqPDl4juJwn5HFR0nKEpbN0n3FyaYmkng8su4/KHONVSf+Sj
      RdaWcVc3E3RbZx2bv34VyVeJS0pxdXKOwd52y/pqMsrItWmS+2kUReLp55/HYflwmly7MsLO
      zh7+YABHeTN9rdbek/TOEiOzW+QyOWRZ5tlnn8L6VaEzMTHJ4NAg2dQOS9vQ1X7nGO3tJKKb
      rESzeEkRM7wMdrfmrZtLxZiYmmVjK0J1VRV7Ozucfuo5KrxWSdFMxkcuIrv8pJNx2nuHKLes
      D1tLU8wubqD4y9FyOs8+aR3ReuXSa6goBCpq2Flf4fT5J7ndN3SiokElu5vKUBmNrc2k48mC
      9RVFIRAMEQ6HKQ/c2wCqLFyF5wixO5qu4/UHCPh9GPqdqf5uR1ezBMJ1BAJeaso8ZI6QDlU1
      FBrrKqlpakaNxwvWzyUTVDa1E/D7KffY0Qq24TJ2M8f41atcm1wgWGE98I/v7ZDSZPToMrPb
      Weqqyi3rOzxlDAyeJlxRxdDQED1tDWSyheZ/DEybm97eHvq6mtna3ClQHzKZLE2tzXj9Fbhs
      hU46h2kLcPbcWRYmx+kZPIfXcef9PlFdIFVVkfQcM4vrtHe0Y1es2/WliRF28eF3yDg9ARpq
      K498rMjaMs5QLX6XdSNo6BoLs9NkTAenOloLdh1M00DTDVKxHXZTBi2NtRTqNKmqiiwZzM0u
      0tDajvsuN+rQMQwdzYC97TWysof66gqLY5jkciqYBplsFlmx43a7LLscif09NtfXsPtCuOwy
      NoeLUDBgbZNpsrE0y/puAsXuoq+3q0B30WBibJScacPUc2imQnV9E401Ffn30DVMZDaW53AE
      a6gMWr30VF5/6TWcfh/RaIzy8hCnenrxOg/f7xPSBTKIRHaJ7WwST6uARDyVIeS3jkB0uJyo
      MRXJ6aLgUwYYRoZXvn+Rc888jcuhkFa1ggLYXF+jrqWF8eERltZ9tDfk757oaproXpyN9TU0
      A2TFgVpfS/6pEJ3r4+Osbu8QKg+hZRIY7nK6mqyFrKaiDF9dwOW0YXdlqa2qwOpdkcmkie1s
      k8gcXNvaxhbLFWG+QBA9E2NiZYfB3nZk+ShRriZb2xFkmwtTy5HJ6fjyXtuD++1wOMlmVJDt
      tLV3Frzf+5F1ppe3sdtk3Ea0gADsPPncc2CaqGqWjdXVu36r4oQIQCYcDpFMphjsajrKswxA
      oKKGCnPv6Icxdfw+P5OXh1EwKW8rPAewE4lgZvYItfUTX18GKwHoJoYJVTVv+cYl2fLBBIWu
      /gHSwyMMDA4hGQkuX92AAgLIxnapau+jLVw4RFlXsywvzKPe7IpJ6EdIU29z+vA74iwuLOLy
      ldHSYD1mAB3J4WdwoK/g/z643xW43W7avUePE0vs79PWM0CF9yiPrcna4hzrkT12Nzc4de6Z
      u3aBTogAACR21mZJqSaVQS++QBBXAW+IJMlvpV43mJtdoKGmQBdIUvCHKmhrrWdpehKfq3Da
      7ba2ZhbXY3SU24kq1oNs0zBI7q6zkVJorgmxODuL/5nncFu+QCWa6ysZHh5GNg2aOgs/QI6y
      CtYvj5JY82JzeunqbM8rNMXuom9gCEyTVCqF3eUu2I0DcLrdKJKJquUgmytYH2RyyShjY2OA
      RFtXDz6n9f27NjZCz5knj3QfALx+H5NXR/G6HLj9IU61NljU1llaWsZbUUMwWE5lRfldPWUn
      ahDc3N6DzymTzeYwjMJDE0k+yDVvtzuQpSPUl+xsry+Q0UyaO3sJFfA6AMT2omyvzPDG8Bgr
      m7uWdZ0eHw1NTaCplIdC2GX5SJ+IkmQFDB1Tkshms5Z1s4l9UiqUl5dhs9mwKUfrnly+9BqL
      K6uMXnyV7Vim4B5rc1PINjuuYA2ZROFWVpIUTg8OEQ6HCYfDBcdvYFJe5mNsZJixsbFDUan5
      8JWF8NgkNEMnmyvkkLDx1Lt+iK72ZqqqK5i8PEIie+c+J6QFMDFNjfWNKH2nu8nEt1he26Gz
      zbrZlWUFh8MBmJw7f5QoTZOAz8OV0VFcTgftXT13DIpuJxJNcKqxGrOmi8jCXMEj2D1Bhnpb
      mZ+bo2PwLJ6Cz6fJwvIGAaeNqpZGVjcS1Ffmj8l3eHzYMfF6D6b0JUm2fIuZpolhaGD30tnR
      Ti4VZHFjh8oy69bMFyzHbfcxPTmF4i7sYTNNjeGRUQxTwuey4w5W4LScxzFweMM809tALh1j
      J56FAmOAlflZAgE/+KuJ3/gykQXbkQiV4TCKBA5vAM9J7gItzU4xv7CAbubQNJ3OvtOW9RO7
      EVKaxtrawcosTyBDZ1uhACwFl8vF7v4eVdWVyEf4Wk1zcwtuj4PxsXHCDW0F65u6ytT1aQzF
      zszMHOeG+gqMaSTKQyH8Lpi8Nk1FrfU8gyTLqPFthq8tvjUI9tHd1ZF3HsDQcsxMT2OaBhMT
      E5iGQX1bZ8HzCFbWEduP093ThWI/SmSlhC9QjpFL4XLYyeQ08ORrYU0WZia5PL7AbjRCNpOi
      8dRAYZsqwpgOD9cnJ3B4C43fNFZX1inzKqzvG9R7s2zFs9QEDg/+T5Ab1GR9fYOKMjfXplfo
      6u3FXWApmZpJsbN3K7jOFyjH58l/sww9y+Ur0wTsOorTjT3cQH3Qk7f+0uw0Na2nWJmfpa3d
      +sG8QTq6ztK+RFdzDXNjo1T0DlFW4DWTyyTZ3Tvw/3v9Qfxe6xnO+NoU2/ZG2iqPuk7XYOrq
      FWKpHKlYlJahZ2guMMm4MnWZmFSG3yljd3mprcrvnjxoZQxM00TPZYjEUtTWWL9g0sk4ibSK
      xwGR/SyN9bUFZ8wNXWUnsoNugs3pJlxuJQKT4Yuvo6sqzaefJLVyHV9TJ+HbwqRPTAsABpub
      22yvZWlqbWBpeYuuAl2g9YUpsu5q/E6YnprB5XAy8MQTOPPoRpIdeGwqC6tbeCpqOddq/aCl
      UykMExKJhGW9t+MqC6MujjG8s4bk8NJa8AqbXL0yTnVD05FapN3NFVa2k8QToyTWCw+CD5Dp
      7BsEILO/wcJWHAoIwOvzMT27TsbjwB0wLAWgpuNMzS6+bbwjUxYKWQyCDSavzzB4ZoBXX36V
      proKFtddtNZZT7itzEyQcVYQcB1l3CMxOHSGrAYet4Ns6ykczjtbpBMkABm/C1KEsOk65RWF
      Q3/dHjexrEZdyIfN5aPMKaHnbc8M5q5PomKnuq4ekFF1A4eFRyQUKmPiyii6pjE6OkqwspaW
      +gKLPEzQDQNJsh18FLDgWYBkaGRVHbtceHG912XDV9nCwGA5YDI1MXmEgbbB/NR14hkVXTdo
      7ewtuEciHqerf5Byl3QwSLfA4QnQ19/PxNglcqYNMLE2SkIyNOavjVLe1E25N81a0mpQaxLb
      jRBPpshqbjw2N7K9sCtXsTvxvOVgcuaJZTpBAjDBlNEy+8wsmzR35H/j3CDc2Imyvc7KRpTz
      5wbR1RzOvPdKor65lUxyl6XNNKfa6nEUCLarrG+h8ujhRQBkYtu4K5robK5mbmyYPQ2CBa5y
      R08fyfSB96dQcJ6WzZDVbDcjHjNvtVLWSpMpLw+wt7qN01tGwFPY7ejx+bg2MU6Zz4XLX05n
      a6HxlYaKm6Gho8wDSPSd7iOyl6StqoLU/h7NDdaL8W12B1WNHZimgWEYR/R+3WJl9hpR3Uv/
      qeZD7tATJACJ5lPdmKZJbHOReEqlIm8uGpO1xVm2ore6JvOLqwUGwRIutxtJd+F0mrjdR+s/
      a9k0i0vL6Ej4yiqoq8q/iisR3WZuaYPofppMbJN4XKXhCPdpdWmeldVNvH4P/tou+iy6Zt6q
      ZpSro1y6tIihq4Tr2yxmmm+gMzO/zrkL54htLTCzFKGz2XrOxF9eRTCSQDeMI7mkQSYV2z7y
      PIDd6aG2+mD85S2z7vqARG5/g4StnuTSKPuGA9208dxT1p4/09SZvDJG1pDQNBW7U0I1Drf6
      J0gAJhsriySzGtnUPv5qq+WCEnXNHdQ1mSTie+iys4DLDQ4GguMkMjlyqsFoYpeOnt6CkzWT
      E1eRNRV3Ywfb2zuWAvCVV3I6WMH25gY5zaCiQkEu+HaGtCbR2lSLv66BtcUoYNXNkujsu9e8
      nhJ6Lsn1qSm0TIxIPILfY6O2Mv+Dt7E0T01HP5VHnHU1DHji2edulhQOTTeZnRxneWMHpyLT
      OnCemrL8DolsOoe72kW48zSeQICxkZG8dW8ewVDRZDdDA92sz13H8HqYmFxmsO/W2vETJACJ
      qtoGDNMkFY9h8+S/GDeIrM6xGsuSy+g4bSYDg1auNJnOvsKutttxe/yEgy4mllZxOgvblIlt
      sRpJ0FgTQpLkgnH6INHV2YlNMZmenqe1o7CL8t6RGDp7jqXlVSobO2hxeQquOfD4PEyMjbJd
      5sHpC9LeZLX00WA/FmN7Y5WsDiDT2tlV4OWiE8+YlAeDnGqpZm0vCRYCqGxq59LwG7h9ZWRT
      ccrrCrukJdmBno4ycf06+7t7dPeWkXCf0PUAmeQ+0zNz7G6s4WnsYaCz8CA4l83g8gcxUhuk
      csczqd3YUMvU7AKKkaWsvLZgfafHx9bKKOn9CJLs4MyFEFbd1anJCdq7elAk6OqoZ2Z1h0B7
      4ePcGyZXx8dxGBrxYIDdfY1TLVWWe4Tq2jjFEjnZg99TaDGMSTKZpa2jnZ29DNUWreQtbNTV
      1aBoacanV+nosZ73URweLjz5FLlcDlmxYyvY4h9MEg6ee5J0JoO9vQObIhEIHH4jnRABGFx6
      /TV8NW0019bgaWujQM8EMKlp7YaVRVJ2B4N91p6NbDLGxNQ0SyubNDXWs72+xtBzL1Dpsw6H
      mJycovP0GezywQUtRDYZp6VniFONBw9YoRYgnUphGAaKImOYBul04TCF+8EwDGw2hd3IDsFy
      qxiaA7aXptk13OT2I+xJGuXBQYvaOru7e1RVuIjuJY4oAI2569fpu/AUZ0Ihtm/CfesAAAhL
      SURBVPYS4LOecJMkGafz6CvTDCPHK997CX95BSCf5HBomWff8z7SiT1mpvbYGh9G6eymIpC/
      SUxFN3jz6jwepx1N1xmfmObCQHfe+k5vGYODA+TUMfr6+1l1SOiGnrf+Ddw2k+vTs3gdMr6y
      Cmos+s0Ado+P7SujZGNbSLKdrt4eyxVhPV3tDL/5BjabDVWTGDg7VNCme8aUGDp7hsXFZar9
      QSosJv9uoNgUcvtpErEdnP5Cg1QFPRNjfCJBOqszmtqjo7vXIhwawMTt8TE3PoLd60W2P7js
      HDeQkHD7g3R0dADSQYKC2+ucnJngt2GamNx9UfMNViYv424dYPXKG5waeoLp8TEGhqzeUgAm
      scgmS+vbeAMhWprqCk4+qbksOfXAR22zO3A6CrgQTZ2VxQWi8TSSrNDV01MwN+pxM3NtlL20
      httfgRZbp67zDJVlBbxgpkl0Z4tERqemtuZIEaT3hs7WVpTKygo2l2bQPFU0VD5YEZimzvzM
      DKZsAyTqmppx3yaCE9IC3IYkFZxAsjnsTI9fJr23j3rlMplc4YkR09CZnJzC6QuwH90hVVNt
      OVCL7kTIZpJsbEeBg/iYlnrrvnN6b4u9nEkuq+NSVHTgaMG+x4VOMidz/tx5Xv72N2k/82zB
      h9/QMly6eAmby4uaS6PLLloK5Bm9d2SiW8tcGbuMyy7TOniPEy5HQEJGMjX29lPINtddJz1P
      pgCOQE1bL4WWaNyJibusgoHTR5msgfKKMOurGfoGBjGzcebXCocF251uvF4FdW+T3SS0PfT2
      VcLMJRkdHUWVHGwuzeKwdVp2L3eWZqjuPk9TuRNMk5HRy8cgAJ2MplARDtHVVsfKThyO0DW7
      Fwwjy35G4syZM2zOTrIVz1B7m/gfWQHcF5KEpKZvTtYcJRy6Khzk4quvoCtuzl8oPPGS1BRa
      6iqhrpL9/RhHCls5VmSGnri3L6nksjmWZifYfevS7MQKJyi4d2w0NjWgaGmuTK3SVSD6936Q
      ZAeyus/w8DDZnMHZ5jsH2SUlAAmFuvo6tnZjSMjIBRZtL85MEUvlwNCxe+xsbG7TXJe/C6Sm
      9lndiFEWOIjV311agJ7C0aAnjfqeszz4DslhIltblFdWMHl5HruiYLuHnE5HQ2dpcY2+s08i
      czCxl1V1XLYTOg9QDAwjx9ziQUbpoNdOWtXvGBTdQqa5o5vF+Tl6+08fKSGWzekhGb3OZqQM
      OzlWYxkaH3oLAGAwdukNDOXAhdjYZt0FKoY9K2vrVFQFMSQ3zbVeVta26Wq9905tfhR8LpM3
      3xzGaTdx+muovotX6kQtiTxuJEmhrDyIx2GyE0tiHiHGxWGmeenVN1lfXye6bx0WLducDA0N
      kN7fZXc/zbknzmM76gr/48buYXBwiKGhoYf88ANIoGXJqAp9p7tJx+M4jxibdXQM4ok0DjIs
      b8RBTZJW73SUnEw36HHxlnvVNA00zcButxecqEol9okn00iShNPjo8z3sB+ee0NXM1yfnCKR
      TuN0HjxkDa0dD10EuXSc8WvXAfCW19DZ2nCEsJF7wSSbyR6KynY4nHd0e0tLAICua6hv+fUd
      TmfBeYDN5TmWNnYwtByOslrO9BaOQTl5GFwevcLA0CDpvTVWojY6W63duaVCSY0BTENj+I3X
      2ItncNplBp56rmBu0OrGNqob2zCNHGNXZizrnlwkTDXN8uoaicgagfr8M+aPE6ah8doPXsbt
      CxKL7uD0eGnrHqKq7FY4RWkJwNRxeIOEHVnCATfprFZQAJH1Jda29zBNHX/o3j8GcTKQOD00
      yJWxq1Q3tlIZKo2PFpqmjssXZmion43ZCcyKStbnl6kaOnWzTmkNgmUHXZ2nONXeRBIXVQHr
      wCo1k2Btc5empkbUrEqgzDo/5snFYGz0MnI2RdbIMr8cedgGFQVJdhD22xgeGWE9aRKyy1Q3
      HXbwlpAAdHYiEeanJ5hZWCWTTJBWrYPhFmamaeg4xRuvXqR/sI/F2dki2frg0TQdt8vJXjSK
      bCudhl9WbMjSwRpkzRagJnR48F86VwKFcDiMz+e9Gdx2t+jAt6PrBrqmEwj6yWUPJsQeTST6
      B06zvLxCqCxMXeWj2pLdG6aRZTOa5uyZ/BG2JdQCgGmqDL95iUgkQiSyc8d3vm6nvrmZ+G6E
      qupqIpEoDc33/hnWk4HGy9/5LlmcVJXZmZ5bedgGFQVJshGPbjE1NcXU1PRdW/wSagEAZJBl
      /P6DUIVCGRj8wTD+4OPxoemapg6awh6Ghy/jDef/2stjhaTQ39vFyuYO/vLKxysa9L6QZNpb
      W9A0DZAolRmQdDJHd08ndruNc2c85OQHPet6QjE15pY36O3tYXnmOnsV4Ts+21RSXSBMg0g0
      Tmp3g+tTM6QKDIIfDwympmewvTXwNY0Mq2ul4QUCMDQNE4mcqt110rO0BIBBKrFHJA2dDeE7
      vqv7eCKhmDm2ojEymTRLC8t4A6UxCJZkO2eG+lhdXqL+VB/ld0kIVmKhECaRtUW29lX8fh/1
      dTVHysf5qGNoOebm5sjkNEJVdZa5jR4fdK6NjrKfShJL6oSCAboHBvHftv6jpARgGhpvXrxE
      R2cXq/Mz1HUPEMqbwlvwOJBNRFjYzNDVfvdMGKU1CMbEMEy8Pi9ywQSugkcbg+lrV9lPxNiK
      qmSTe7R3d+N1lHILYJpkkjGmZxYI17dQGy6zzDwheJQ5eNnderwlZFm6436XkABMRi/+gKxx
      kLY8mcxw/umnC+YGFTzelNDdV5Ed5Qy0BJle02ivzhJNZoUASpwSuvsSiegW13L77Cc10opB
      80DhFIGCx5sS6gIJBHfy/wFpp958nm0PaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Cases Per Season (Europe)' width='192'>
      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
      s0E3vkidYAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Observations per Continent' width='192'>
      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
      /hSAp2UbwgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 4 Diseases Through Time (Europe)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 4: Number of Incidents (Europe)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Animals Through Time' width='192'>
      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
      sVmrZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Animals/Diseases Through Time (Europe)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Where Diseases Are' width='192'>
      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
      OAZFWAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
